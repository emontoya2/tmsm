{"title":"Summarizing categorical data","markdown":{"yaml":{"editor_options":{"markdown":{"wrap":72}}},"headingText":"Summarizing categorical data ","headingAttr":{"id":"sec-catsum","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n\n![AI art generated from the text \"Summarizing categorical data\"](images/datasummary/sumpic.jpg){width=50%} \n\n\nHere we cover the following graphically and numerical summaries:\n\n- Bar graphs\n\n- Frequency tables\n\n- Contingency tables\n\n- Comparative or conditional plots\n  \n  \n## Single categorical variable {#sec-catevar}\n\n\nA bar graph or plot may be used to visualize the distribution of levels for a single categorical variable.     The height of the bar for each category is equal to the frequency (number of observations),  relative frequency of observations, or percentage of observations in the category. Generally, bar graphs leave some space in between each bars to highlight that there is no ordering in the classes.  These graphs provides a nice visual of number observations in each level of a given categorical variable. \n\nThe function `bargraph()` creates a  bar graph.\n\n::: {.callout-tip icon=false}\n\n## R functions\n```\n### bargraph( ~ x , data,  ylab, xlab, type)\n# x: Replace x with the name of the variable of interest\n# data: Set equal to the name of the dataframe being used\n# xlab: Set equal to the label for x-axis (optional)\n# xlab: Set equal to the label for y-axis (optional)\n# main: Set equal to the title of the plot (optional)\n# type: Set equal to \"frequency\" (default) or \"proportion\"\n```\n:::\n\nNote that the type argument specifies whether to display frequencies or proportions. Many of the R functions used in this resource will have identical arguments, therefore while the arguments will be provided for any functions used, arguments such as `x`, `data`, `xlab`, ... will generally no longer be described.  \n\n\n \n::: callout-note\n\nThe case study data given in @sec-casestudy1 consists of three variables labeled as `Light`, `Turbidity`, and `Survival` in the data frame `dssurve`.  The case study data given in @sec-casestudy3 consists of several variables, including the categorical variable `county`. \nHere, the categorical variables are summarized graphically.\n\n::: {.panel-tabset}\n## R code\n\n```{r }\n#| echo: true\n#| eval: true\n#| message: false\n#| warning: false\n\n# Import data from case study on delta smelt\ndssurv <- read.csv( \"datasets/dssurv.csv\" )\n\n# Load the dplyr package. This package provides mutate()\nlibrary(dplyr)\n\n# Note:  mutate( 'dataframe name' ,'new variable' = 'function of variable in data frame', ...)\n# Convert variables Light and Turbidity to factors\ndssurv <- mutate( dssurv, \n                  Light= as.factor( Light ) ,\n                  Turbidity= as.factor( Turbidity ) )\n\n\n# Import data from case study on air pollution\npmdf <- read.csv(\"datasets/dailyPM10.2021.csv\")\n\n# Convert variable county to a factor\npmdf <- mutate( pmdf, \n                county= as.factor( county ) )\n\n```\n\nThe following code creates a bar graph of the variables `Light` and `county`:\n```{r }\n#| label: fig-bgfishpm\n#| fig-subcap:\n#|   - \"Frequency bar graph\"\n#|   - \"Relative frequency bar graph \" \n#| layout-ncol: 2\n#| echo: true\n#| message: false\n#| warning: false\n\n# Load the 'mosaic' package which provides the 'bargraph' function.\nlibrary(mosaic)\n\nbargraph( ~ Light ,     # Create a bar graph for the 'Light' variable.\n          data=dssurv , # Use the 'dssurv' data frame.\n          type=\"proportion\" ,           # Display proportions of each category.\n          ylab=\"Relative frequency\" ,   # Set the y-axis label.\n          xlab=\"Light intensity\" ,      # Set the x-axis label.\n          main=\"Using labels on axis\" ) # Set the title of the plot.\n\nbargraph( ~ county ,   # Create a bar graph for the 'county' variable.\n          data=pmdf,   #Use the 'pmdf' data frame.\n          type=\"frequency\" ,            # Display the frequency of each category.\n          ylab=\"Frequency\" ,            # Set the y-axis label.\n          xlab=\"County\",                # Set the x-axis label.\n          main=\"Frequency bar graph\" )  # Set the title of the plot.\n\n```\n\nNote that medium light intensity was less common than other light intensities.  For the PM10 data, Kern county has more monitoring stations compared to Fresno and Tulare. \n\n## Video\n```{r}\n#| echo: false\n#| eval: true\n\nlibrary(\"vembedr\")\n\nembed_youtube(\"gzIMI12K7h0\")\n\n```\n\n:::\n\n:::\n\nThe bar graphs provide a clear visual of the distribution of levels of the categorical variables. To numerically summarize a categorical variables, one can use the `tally()` function to create the basis for a frequency or relative frequency table:\n\n::: {.callout-tip icon=false}\n\n## R functions\n```\n### tally( ~ x , data,  format, useNA)\n# format: set equal to \"count\" (default), \"proportion\", or \"percent\"\n# useNA: should the table count missing values?  Set equal to \"no\" \n#        (never consider missing values), \"ifany\" (only if the \n#        count is positive) , or \"always\" (even for zero counts).\n```\n:::\n\n::: callout-note\nThe following code helps create a frequency or relative frequency table for the variables `Light` and `county`:\n\n::: {.panel-tabset}\n## R code\n\n```{r }\n#| echo: true\n#| message: false\n#| warning: false\n\n# Use the tally() function from the mosaic package to \n# compute a relative frequency table for the \"Light\" variable in \n# the dssurv dataset.\ntally( ~ Light , \n       data=dssurv , \n       format=\"proportion\" ) \n\n# Use the tally() function to compute a frequency table for \n# the \"county\" variable.\ntally( ~ county , \n       data=pmdf ,\n       format=\"count\" ) \n\n\n```\n\n\n## Video\n```{r}\n#| echo: false\n#| eval: true\n\nlibrary(\"vembedr\")\n\nembed_youtube(\"nptw_TuBCaE\")\n\n```\n\n:::\n\n::: \n\nThe `tally()` output provides a clear numerical summary of the data by providing the count/proportion/percentage of observations in each each level for the variable of interest.  The output from `tally()` can then be used to form a relative frequency table. Such tables make it easier to see the frequency counts for a categorical variables than by looking at the actual data. \n\n\n\n## Two or more categorical variables\n\nA bar graph  can also graphically  summarize two categorical variables by providing a bar plot for a given variable at each level of another categorical variable. Such graphs are generally referred as comparative plots or conditional plots.  Here, we create three comparative bar graphs using `bargraph()`. For each, we have to specify a grouping variable:\n\n::: {.callout-tip icon=false}\n\n## R functions\n\n```\n### Creates a bar graph at each level of another categorical variable:\n### bargraph( ~ x  | gfactor , data,  ylab, xlab, type)\n# gfactor: Replace with a grouping (categorical) variable.\n#         This variable should have two or more levels, and \n#         the resulting graph will show the distribution of \"x\" \n#         at each level of the grouping variable.\n#\n###\n###\n### Creates grouped/clustered bar graph:\n### bargraph( ~ x , groups, data,  ylab, xlab, type, auto.key)\n# groups: Set equal to the grouping (categorical) variable.  \n#         This variable should have two or more levels, and \n#         the resulting graph will show the distribution of \"x\" \n#         at each level of the grouping variable.\n# auto.key: A list of the form list( x, y , corner = c(0, 0)), where\n#           x is set equal to the location on the x-axis (from 0 to 1). Similarly for y.\n#           corner is set equal to one of c(0,0) (bottom left corner of legend), c(1,0), \n#           c(1,1) and c(0,1).\n#\n###\n###\n### Creates a stacked bar graph:\n### bargraph( ~ x , groups , data,  ylab, xlab, type, stack)\n# stack: Set equal to TRUE for a stacked barchart. Default is FALSE\n#\n```\n::: \n\n::: callout-note\nThe case study in @sec-casestudy5 contains many variables dealing with characteristics related to school shootings. The following code creates a bar graphs of `Media_Attention` for each level of `AgeGroup`:\n\n::: {.panel-tabset}\n## R code\n\n```{r }\n#| label: fig-gunexample\n#| fig-cap: \"Examples of bargraphs.\"\n#| fig-subcap:\n#|   - \"Barplot for each age group\"\n#|   - \"Barplot grouped by age group \" \n#|   - \"Barplot stacked by age group \" \n#| layout-ncol: 3\n#| echo: true\n#| message: false\n#| warning: false\n\n# Import data \n# Note: na.strings=c(\"\",\"NA\") tells R to treat any blank \n# and NA entries in the csv file as NA values. \nssd <- read.csv(\"datasets/ssdsample.csv\" , na.strings=c(\"\",\"NA\")) \n\n# Next, we use the mutate() function to \n# convert AgeGroup, Media_Attention, and During_School \n# variables in the ssd dataframe to factors:\nssd <- mutate( ssd, AgeGroup= as.factor( AgeGroup ),\n                      Media_Attention = as.factor( Media_Attention ),\n                      During_School= as.factor( During_School ) )\n\nbargraph( ~ Media_Attention | AgeGroup ,  \n          data=ssd , \n          type=\"proportion\" ,\n          ylab=\"Proportion\" , \n          xlab=\"Type of media attention\" ,\n          main=\"Bar graph for each age group\" )\n\nbargraph( ~ Media_Attention , \n          group= AgeGroup , \n          data= ssd , \n          type= \"proportion\" ,\n          ylab= \"Proportion\" , \n          xlab= \"Type of media attention\" , \n          auto.key = list(x = .6, y = .76, corner = c(0, 0)) , \n          main=\"Grouped bar graph\" )\n\n\nbargraph( ~ Media_Attention , \n          group= AgeGroup ,  \n          data=ssd , \n          type=\"proportion\" ,\n          ylab=\"Proportion\" , \n          xlab=\"Type of media attention\" , \n          stack = TRUE , \n          auto.key = list(x = .6, y = .76, corner = c(0, 0)) ,\n          main=\"Stacked bar graph\")\n\n```\n\n## Video\n```{r}\n#| echo: false\n#| eval: true\n\nlibrary(\"vembedr\")\n\nembed_youtube(\"Zwws8iULyEU\")\n\n```\n\n:::\n\nAll three graphs convey the proportion of observations in each category of `Median_Attention` for a given age group.  For example, note that the highest media attention being  the national level appears to be about the same for all age groups, but it is not the case for local and regional levels. \n\n:::\n\n\n`tally()` may also numerically summarize two or three categorical variables to provide the basis for a two-way or three-way contingency table. If one variable is designated a response variable and the other an explanatory variable, then the response variable is specified for `y` and the explanatory for `x`:\n\n::: {.callout-tip icon=false}\n\n## R functions\n```\n### tally(y ~ x , data,  format=\"count\", useNA)\n# y: replace y with the name of the response categorical variable.\n# x: replace x with the name of the explanatory categorical variable.\n# NOTE: format must set equal to count\n#\n###\n###\n### tally(y ~ x + z , data,  format=\"count\")\n# x: replace z with the name of the additional explanatory categorical variable.\n#\n```\n::: \n\nFor two-way or three-way tables, if `count` is set to `proportion` or `percent` in `tally()`, it will provide marginal/conditional proportions/percentages of observations in each level of one variable, conditional on the levels of another variable. Comparing the unconditional proportions to their conditional counterparts allows one to assess if the data suggest an association between two categorical variables. An unconditional proportion is a proportion measured out of the total sample size, while a conditional proportion is a proportion measured under a specific level of another variable.\n\n\n::: callout-note\n\nFor two-way table, if `count` is equal `proportion` or `percent`, it will provide the marginal/conditional proportions/percentage of observations in each each level of `Median_Attenion` for each level of `AgeGroup`:\n\n\n::: {.panel-tabset}\n\n## R code\n\n```{r }\n#| echo: true\n#| message: false\n#| warning: false\n\n# Conditional proportions\ntally( Media_Attention ~ AgeGroup ,  \n      data= ssd , \n      format= \"proportion\" , \n      useNA= \"no\" ) \n\n# Unconditional proportions\ntally( ~ Media_Attention ,  \n       data= ssd , \n       format= \"proportion\" , \n       useNA= \"no\" ) \n\n```\n\n## Video\n```{r}\n#| echo: false\n#| eval: true\n\nlibrary(\"vembedr\")\n\nembed_youtube(\"ScD1R1o4WDo\")\n\n```\n\n:::\n\nNote that the chances of `Media_Attention` being  \"National\" varies across age groups. Such behavior is consistent with these variables being potentially associated.  \n:::\n\n \n \n \n  "},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"catsum.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.35","bibliography":["references.bib"],"knitr":{"opts_chunk":{"collapse":true,"comment":"#>","echo":true,"message":false,"fig.align":"center","warning":false,"prompt":false,"eval":true,"results":"show"}},"theme":"cyborg","cover-image":"cover.jpeg","editor_options":{"markdown":{"wrap":72}}},"extensions":{"book":{"multiFile":true}}}}}