{
  "hash": "4caa4bcef381e0888ec74db5679ada09",
  "result": {
    "markdown": "---\neditor_options: \n  markdown: \n    wrap: 72\n---\n\n\n\n# Basics of data {#sec-databasics}\n\n![AI art generated from the text \"data\"](images/datamod/datapic.jpg){width=50%} \n\n\n## Variables and observations\n\nThe following are some important data basics:\n\n-   A **variable** is any characteristic whose value may change from one individual (or object) to another.\n\n-   **Data** result from making **observations** on a single variable (called **univariate** data) or simultaneously on two or more variables (called **multivariate** data).\n\n\n::: callout-note\nRecall the data given in  @sec-casestudy1. Each row in the data table above represents a single early-stage Delta smelt larvae in the sample. The formal name for a row is a **case** or **observational unit**. The columns represent characteristics of interest for each early-stage Delta smelt larvae, where each column is referred to as a **variable**. Here, the only characteristics that are of concern for each larvae are the level of exposure of light intensity (`Light`), turbidity level exposure (`Turbidity`), and the percentage of larvae that survived. For example, the first row represents a early-stage Delta smelt larvae that was exposed to a light intensity of 4.5 $\\mu mol/m^2/s$ and a turbidity level of 2 NTUs, where only 56.8% of larvae survived under these conditions.\n:::\n\n\n\n## Types of variables\n\nVariables in a statistical study can be classified as either **categorical** or **numerical**.\n\n- A variable is **categorical** if the individual observations are categorical responses, such as labels, people's attributes, opinions, etc.\n\n- A variable is **numerical** (or quantitative) if its corresponding observations are a numerical values that are measured or counted.\n\n**Factor variables** generally refers to the software's treatment of categorical variables. The levels of a factor variable refers to the value that a categorical variable takes on. For example, the variable \"first-generation college student\" may take on levels 0 and 1, with 1 representing a student who is first-generation college student born before 1999 and 0 representing a student whose is not a first-generation college student.  Factor variable will be used interchangeably with categorical variable. If the levels of a factor variables have a natural ordering, it is called an  **ordinal** variable, while a factor variable without this type of special ordering is called a **nominal** variable. For readability, factor variables will be treated as a nominal factor variables in this resource.  \n \n\n::: callout-note\nThe case study data given in   @sec-casestudy1 frame consist of three variables labeled as `Light`, `Turbidity`, and `Survival` in the data set.\n\n-   `Survival` is a continuous numerical variable. These observations can take a wide range of values.  A numerical variable is **continuous** if its possible values form an entire interval on the number line. \n\n-   `Light` and `Turbidity` are both factor variables, with each having levels low, medium, and high.\n:::\n\n![Breakdown of variables into their respective types](images/varTypes.png){#fig-vartype}\n\n::: {.callout-important icon=true}\n## R and factor variables\n\nWhen data are imported (described in @sec-appendix-basicsR) that contains factor variables, R may not automatically recognize them as such[^1]. If the levels of the factor variables are represented by numbers, R by default, classifies these variables as numeric. If the levels are instead letters or words, R will treat them as character variables by default.\n\nTo convert a variable to a factor variable, you can use the `mutate()` function in the `dplyr` package. \n\n:::\n\n[^1]: There are various functions for importing data from different file formats. While some of these functions may correctly treat factor variables as factors, the functions used in these modules for data importation do not do so by default. \n \n::: {.callout-tip icon=false}\n\n## R functions\n\n```\n### mutate( data ,\n###        'new variable' = 'function of variable in data frame', ...)\n# data: Replace with the name of the dataframe being used.\n# 'new variable' = 'function of variable in data frame': Replace \n#                 'new variable' with name of desired variable \n#                  and set equal to a function of \n#                  a current variable in the  dataframe. \n#                  This will add the new variable to the \n#                  dataframe.  The 'new variable' name may \n#                  also be replaced with the name of a current \n#                  variable as this will override/replace the \n#                  current variable.\n#...: additional new variables can be added to the dataframe. \n#\n### summary( data )\n# Note: This function provides a summary of each numerical variable \n# in the data frame, including the five-number summary (minimum, \n# lower quartile, median, upper quartile, maximum) and the number \n# of non-missing observations. For factor variables, the function \n# provides the count of each level of the factor variable.\n\n```\n::: \n\n\n::: callout-note\nThe case study data given in @sec-casestudy1 consist of two factor variables.   The code below instructs R that `Light` and `Turbidity` are factor variables by using the function `mutate()`. Combined with  `mutate()`,  the function `as.factor()` converts a variable into a factor variable\n\n::: {.panel-tabset}\n## R code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Import the dataset 'dssurv' from a csv file\ndssurv <- read.csv(\"datasets/dssurv.csv\")\n \n# Print a summary of the dataset, including the \n# five-number summary for numeric variables and counts \n# of observations for categorical variables.\nsummary( dssurv )  \n#>     Light            Turbidity            Survival    \n#>  Length:20          Length:20          Min.   :45.02  \n#>  Class :character   Class :character   1st Qu.:55.79  \n#>  Mode  :character   Mode  :character   Median :59.56  \n#>                                        Mean   :62.22  \n#>                                        3rd Qu.:67.24  \n#>                                        Max.   :89.09\n\n# Load the 'dplyr' package which provides the 'mutate()' function\nlibrary( dplyr ) \n\n# Replace `Light` and `Turbidity` with the factor\n# versions. The code below tells R to convert  \n# `Light` and `Turbidity` into factor variables.\ndssurv <- mutate( dssurv, \n                  Light= as.factor( Light ) ,\n                  Turbidity= as.factor( Turbidity ) )\n\n# Print a new summary of the updated dataset.\nsummary( dssurv )  \n#>   Light   Turbidity    Survival    \n#>  high:8   high:8    Min.   :45.02  \n#>  low :8   low :8    1st Qu.:55.79  \n#>  med :4   med :4    Median :59.56  \n#>                     Mean   :62.22  \n#>                     3rd Qu.:67.24  \n#>                     Max.   :89.09\n```\n:::\n\n\n## Video\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"vembedr\">\n<div>\n<iframe src=\"https://www.youtube.com/embed/gXjJ7TusxQA\" width=\"533\" height=\"300\" frameborder=\"0\" allowfullscreen=\"\" data-external=\"1\"></iframe>\n</div>\n</div>\n```\n:::\n:::\n\n:::\n \n:::\n \n\n\n## .csv files {#sec-csv}\n\nTo provide a consistent approach to using R, it is assumed that any research data will be saved in the tidy format using a comma separated values (*.csv*) file. A *.csv* may be viewed with a spread sheet program such as Microsoft Excel. It is assumed readers have used an excel spreadsheet. If not, please view the tutorial [Excel Tutorial for Beginners](https://www.youtube.com/watch?v=rwbho0CgEAE) .\n\nTo store data in a *.csv* file, organize your data in an Excel worksheet, such that the first row (Row 1) contains the column (variable) names and each subsequent row contains all the necessary information for each data point. Next, save the worksheet as a *.csv* file type.\n\n![Sample .csv file in tidy format](images/excel.png)\n\n## Tidy data\n\nNote the format of the data presented in @sec-casestudy1:\n\n-   Each variable forms a column.\n\n-   Each observation forms a row.\n\n-   Each value must have its own cell.\n\nThen data are stored in this format, it is called **tidy data** [@wickham2014].\n\n![Tidy data format. source: @wickham2016r](images/tidydata.png){#fig-tidydata}\n\n\nThe R code below imports two versions of the data  (a tidy and non-tidy version). The R function `read.csv()` is described in  @sec-appendix-basicsR.  The function`head()` (`tail()`) will print out the first (last) few rows of a data frame.\n\n::: {.callout-tip icon=false}\n\n## R functions\n```\n### head( data , n )\n# data: Replace with the name of the dataframe\n# n: Set equal to a number.  The first 'n' rows will be printed\n#\n### tail( data , n )\n# Note: It will print the last 'n' rows.\n#\n```\n::: \n\n::: callout-note\n\n\nThe code below imports the data (tidy and non-tidy format) for the case study given in @sec-casestudy4.\n\n::: {.panel-tabset}\n## R code\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Import tidy data from a csv file and store it in a dataframe called \"bmidf\"\nbmidf <- read.csv( \"datasets/BMIcsdata.csv\" )\n\n# Import non-tidy data from a csv file and store it in a dataframe called \"bmidfnt\"\nbmidfnt <- read.csv( \"datasets/BMIcsdataNT.csv\" )\n\n# View the first 5 rows of the \"bmidf\" dataframe.\nhead( bmidf , \n     n= 5 )  \n#>       Country   Sex Region Year  BMI\n#> 1 Afghanistan   Men  Rural 1985 19.7\n#> 2 Afghanistan   Men  Urban 1985 22.4\n#> 3 Afghanistan   Men  Rural 2017 22.5\n#> 4 Afghanistan   Men  Urban 2017 23.6\n#> 5 Afghanistan Women  Rural 1985 20.1\n\n# View the last 5 rows of the \"bmidf\" dataframe.\nhead( bmidfnt , \n     n= 5 ) \n#>       Country   Sex Region yr.1985 yr.2017\n#> 1 Afghanistan   Men  Rural    19.7    22.5\n#> 2 Afghanistan   Men  Urban    22.4    23.6\n#> 3 Afghanistan Women  Rural    20.1    23.6\n#> 4 Afghanistan Women  Urban    23.2    26.3\n#> 5     Albania   Men  Rural    25.0    26.9\n```\n:::\n\n\nThe tidy format make a clear distinction between a variable, an observation and a value. The format of the second data set may be useful for quickly observing some year to year changes. However, this format violates the tidy form because information regarding year appears both in the rows and columns. Tidy data helps to think about a data set in terms of variables and their observed values.\n\n## Video\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div class=\"vembedr\">\n<div>\n<iframe src=\"https://www.youtube.com/embed/90gjWDm2dWU\" width=\"533\" height=\"300\" frameborder=\"0\" allowfullscreen=\"\" data-external=\"1\"></iframe>\n</div>\n</div>\n```\n:::\n:::\n\n\n:::\n\n:::\n \n\n\n\n## Codebooks\n\nAn important task in a data based research project is to document the structure and content of project dataset. This can be done in the form of a **codebook**, a file that lists at least the names of the variables, variable descriptions, and data source. Sometimes it may also provide the variables' type (e.g., continuous, categorical) and levels of factor variables (e.g., 1 = disagree,..., 3 = agree). Writing a codebook is an important step in the managing the data aspect of your research project. The codebook will serve as an important reference for the researcher and any collaborators, and there are multiple approaches for creating a codebook, with Excel being a popular choice. The next section contains a sample codebook for the case study data.\n\n::: callout-note\n\nHere, a codebook is provided for the data given in  @sec-casestudy1.\n\n**Codebook**\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n\n\nThe Delta smelt case study data frame has the following dimensions:\n\n| Feature                | Result |\n|:-----------------------|-------:|\n| Number of observations |     20 |\n| Number of variables    |      3 |\n\n#### Codebook summary table {.unnumbered}\n\n| Label                                                                                                                                                                     | Variable        | Class   | \\# Unique values | Missing | Description |\n|:-----------|:-----------|:-----------|-----------:|:----------:|:-----------|\n| low dosage (4.5 micromols per square meter per second), medium dosage (6.75 micromols per square meter per second), high dosage (9 micromols per square meter per second) | [**Light**]     | factor  |                3 | 0.00 %  |             |\n| low dosage (2 NTUs), medium dosage (5.5 NTUs), high dosage (9 NTUs)                                                                                                       | [**Turbidity**] | factor  |                3 | 0.00 %  |             |\n| Percentage of early-stage Delta smelt larvae (0-40 days post hatch) that survived                                                                                         | [**Survival**]  | numeric |               20 | 0.00 %  |             |\n\n#### Variable list {.unnumbered}\n\n##### Light {.unnumbered}\n\n*low dosage (4.5 micromols per square meter per second), medium dosage (6.75 micromols per square meter per second), high dosage (9 micromols per square meter per second)*\n\n\\bminione\n\n| Feature                 |  Result |\n|:------------------------|--------:|\n| Variable type           |  factor |\n| Number of missing obs.  | 0 (0 %) |\n| Number of unique values |       3 |\n| Mode                    |   \"low\" |\n| Reference category      |     low |\n\n\n```{=tex}\n\\emini\n\\bminitwo\n```\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](basics_files/figure-html/Var-1-Light-1.png){fig-align='center' width=384}\n:::\n:::\n\n\n\\emini\n\n-   Observed factor levels: \"high\", \"low\", \"med\".\n\n\\fullline\n\n##### Turbidity {.unnumbered}\n\n*low dosage (2 NTUs), medium dosage (5.5 NTUs), high dosage (9 NTUs)*\n\n\\bminione\n\n| Feature                 |  Result |\n|:------------------------|--------:|\n| Variable type           |  factor |\n| Number of missing obs.  | 0 (0 %) |\n| Number of unique values |       3 |\n| Mode                    |   \"low\" |\n| Reference category      |     low |\n\n\n```{=tex}\n\\emini\n\\bminitwo\n```\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](basics_files/figure-html/Var-2-Turbidity-1.png){fig-align='center' width=384}\n:::\n:::\n\n\n\\emini\n\n-   Observed factor levels: \"high\", \"low\", \"med\".\n\n\\fullline\n\n##### Survival {.unnumbered}\n\n*Percentage of early-stage Delta smelt larvae (0-40 days post hatch) that survived*\n\n\\bminione\n\n| Feature                 |       Result |\n|:------------------------|-------------:|\n| Variable type           |      numeric |\n| Number of missing obs.  |      0 (0 %) |\n| Number of unique values |           20 |\n| Median                  |        59.56 |\n| 1st and 3rd quartiles   | 55.79; 67.24 |\n| Min. and max.           | 45.02; 89.09 |\n\n\n```{=tex}\n\\emini\n\\bminitwo\n```\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](basics_files/figure-html/Var-3-Survival-1.png){fig-align='center' width=384}\n:::\n:::\n\n\n\\emini\n\n\\fullline\n\nReport generation information:\n\n-   Created by: Eduardo L. Montoya (email:`emontoya2@csub.edu`).\n\n-   Source: The data are a subset of the data provided by Dr. Tien-Chieh Hung. The data are a subset of the data analyzed in @tigan2020.\n\n-   Codebook created using dataMaid v1.4.1 \\[Pkg: 2021-10-08 from CRAN (R 4.1.3)\\]\n\n-   R version 4.1.2 (2021-11-01).\n\n-   Platform: x86_64-w64-mingw32/x64 (64-bit)(Windows 10 x64 (build 22000)).\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/vembedr-0.1.5/css/vembedr.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}